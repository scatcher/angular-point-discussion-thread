{"version":3,"sources":["apDiscussionThreadFactory.ts","Post.ts","DiscussionThread.ts","apDiscussionThreadDirectiveController.ts","apDiscussionThreadDirective.ts"],"names":["ap","ap.discussionThread","ap.discussionThread.DiscussionThreadFactory","ap.discussionThread.DiscussionThreadFactory.constructor","ap.discussionThread.DiscussionThreadFactory.createDiscussionObject","ap.discussionThread.Post","ap.discussionThread.Post.constructor","ap.discussionThread.Post.deletePost","ap.discussionThread.Post.removePost","ap.discussionThread.Post.reply","ap.discussionThread.Post.savePost","ap.discussionThread.DiscussionThread","ap.discussionThread.DiscussionThread.constructor","ap.discussionThread.DiscussionThread.createPost","ap.discussionThread.DiscussionThread.getNextId","ap.discussionThread.DiscussionThread.prune","ap.discussionThread.DiscussionThread.reset","ap.discussionThread.DiscussionThread.saveChanges","ap.discussionThread.DiscussionThreadController","ap.discussionThread.DiscussionThreadController.constructor","ap.discussionThread.DiscussionThreadController.clearTempVars","ap.discussionThread.DiscussionThreadController.cleanup","ap.discussionThread.DiscussionThreadController.createPost","ap.discussionThread.DiscussionThreadController.deletePost","ap.discussionThread.APDiscussionThreadDirective"],"mappings":"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CAACA;oBACvBA,OAAOA,EAAEA,IAAIA,IAAIA,EAAEA;oBACnBA,IAAIA,EAAEA,qBAAIA;iBACbA,EAAEA,IAAIA,CAACA,CAACA;gBAETA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;gBACzBA,MAAMA,CAACA,OAAOA,CAACA;YACnBA,CAACA;YACDF,oCAASA,GAATA;gBACIG,IAAIA,SAASA,GAAGA,CAACA,CAACA;gBAClBA,EAAEA,CAACA,CAACA,IAAIA,CAACA,KAAKA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACxBA,IAAIA,QAAQA,GAAGA,CAACA,CAACA,GAAGA,CAACA,IAAIA,CAACA,KAAKA,EAAEA,UAACA,IAAIA,IAAKA,OAAAA,IAAIA,CAACA,EAAEA,EAAPA,CAAOA,CAACA,CAACA;oBACpDA,SAASA,GAAGA,QAAQA,CAACA,EAAEA,CAACA;gBAC5BA,CAACA;gBACDA,MAAMA,CAACA,SAASA,GAAGA,CAACA,CAACA;YACzBA,CAACA;YACDH,gCAAKA,GAALA;gBACII,6CAA6CA;gBAC7CA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,KAAKA,EAAEA,UAACA,IAAIA;oBACpBA,EAAEA,CAACA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA;wBAC1BA,IAAIA,CAACA,UAAUA,EAAEA,CAACA;oBACtBA,CAACA;gBACLA,CAACA,CAACA,CAACA;YACPA,CAACA;YACDJ,gCAAKA,GAALA;gBACIK,IAAIA,CAACA,KAAKA,CAACA,MAAMA,GAAGA,CAACA,CAACA;YAC1BA,CAACA;YACDL,sCAAWA,GAAXA;gBACIM,IAAIA,CAACA,KAAKA,EAAEA,CAACA;gBACbA,IAAIA,QAAQA,GAAGA,IAAIA,CAACA,WAAWA,EAAEA,CAACA;gBAClCA,MAAMA,CAACA,QAAQA,CAACA,UAAUA,CAACA,CAACA,IAAIA,CAACA,0BAA0BA,EAAEA,CAACA,CAACA,CAACA;YACpEA,CAACA;YACLN,uB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","file":"angular-point-discussion-thread.js","sourcesContent":["/// <reference path=\"../typings/ap.d.ts\" />\r\n\r\nmodule ap.discussionThread {\r\n    'use strict';\r\n\r\n    /** Share within module */\r\n    export var moment;\r\n    export var toastr;\r\n    export var user;\r\n\r\n    /**\r\n     * @ngdoc service\r\n     * @name apDiscussionThreadFactory\r\n     * @description\r\n     */\r\n    export class DiscussionThreadFactory {\r\n        static $inject = ['moment', 'toastr', 'user'];\r\n        constructor(_moment_, _toastr_, _user_) {\r\n            moment = _moment_;\r\n            toastr = _toastr_;\r\n            user = _user_;\r\n        }\r\n\r\n        /**\r\n         * @ngdoc function\r\n         * @name createDiscussionObject\r\n         * @param {object} listItem List item with discussion.\r\n         * @param {string} discussionAttributeName Name of attribute on list item.\r\n         * @returns {object} Newly instantiated discussion object.\r\n         */\r\n        createDiscussionObject<T>(listItem: ap.IListItem<T>, discussionAttributeName = 'discussionThread'): DiscussionThread {\r\n            var discussionThread;\r\n\r\n            if (listItem[discussionAttributeName] && listItem[discussionAttributeName].constructor.name === 'DiscussionThread') {\r\n                /** Discussion thread is already instantiated */\r\n                discussionThread = listItem[discussionAttributeName];\r\n            } else {\r\n                /** Instantiate and return new discussion thread */\r\n                discussionThread = new DiscussionThread(listItem, discussionAttributeName);\r\n            }\r\n\r\n            return discussionThread;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    angular\r\n        .module('angularPoint')\r\n        .service('apDiscussionThreadFactory', DiscussionThreadFactory);\r\n\r\n\r\n}\r\n","/// <reference path=\"apDiscussionThreadFactory.ts\" />\r\n/// <reference path=\"DiscussionThread.ts\" />\r\n\r\nmodule ap.discussionThread {\r\n    'use strict';\r\n\r\n    export interface IPost {\r\n        created: Date;\r\n        content: string;\r\n        deletePost: Function;\r\n        id: number;\r\n        getThread(): DiscussionThread;\r\n        parentId: number;\r\n        removePost: Function;\r\n        reply: Function;\r\n        savePost: Function;\r\n        user: ap.IUser;\r\n    }\r\n\r\n    export class Post implements IPost {\r\n        created: Date;\r\n        content: string;\r\n        id: number;\r\n        parentId: number;\r\n        user: ap.IUser;\r\n        getThread: Function;\r\n\r\n        constructor(post, thread) {\r\n\r\n            this.getThread = () => thread;\r\n            _.assign(this, post);\r\n            if (_.isString(this.created)) {\r\n                /** Convert stringified date back into JS date */\r\n                this.created = moment(this.created).toDate();\r\n            }\r\n        }\r\n\r\n        deletePost() {\r\n            this.removePost();\r\n            return this.savePost();\r\n        }\r\n\r\n        removePost(): void {\r\n            var thread = this.getThread();\r\n            var index = thread.posts.indexOf(this);\r\n            thread.posts.splice(index, 1);\r\n        }\r\n\r\n        reply(response: string) {\r\n            var thread = this.getThread();\r\n            thread.createPost(this.id, response);\r\n            return this.savePost();\r\n        }\r\n\r\n        savePost() {\r\n            var thread = this.getThread();\r\n            return thread.saveChanges();\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"apDiscussionThreadFactory.ts\" />\r\n/// <reference path=\"Post.ts\" />\r\n\r\nmodule ap.discussionThread {\r\n    'use strict';\r\n\r\n    export interface IDiscussionThread {\r\n        createPost(parentId: number, content: string): Post;\r\n        getDiscussionAttributeName(): string;\r\n        getListItem(): ap.IListItem<any>;\r\n        getNextId(): number;\r\n        posts: Post[];\r\n        prune(): void;\r\n        reset(): void;\r\n        saveChanges(): ng.IPromise<ap.IListItem<any>>;\r\n    }\r\n\t\r\n\t/**\r\n\t * @ngdoc function\r\n\t * @name createDiscussionObject\r\n\t * @param {object} listItem List item with discussion.\r\n\t * @param {string} [discussionAttributeName='discussionThread'] Name of attribute on list item.\r\n\t * @returns {object} Newly instantiated discussion object.\r\n\t */\r\n    export class DiscussionThread implements IDiscussionThread {\r\n        posts: Post[] = [];\r\n        getListItem;\r\n        getDiscussionAttributeName;\r\n        constructor(listItem: ap.IListItem<any>, discussionAttributeName = 'discussionThread') {\r\n            \r\n            /** Protect these two paramaters to prevent saving to SharePoint */\r\n            this.getListItem = () => listItem;\r\n            this.getDiscussionAttributeName = () => discussionAttributeName;\r\n\r\n            _.assign(this, listItem[discussionAttributeName]);\r\n\r\n            _.each(this.posts, (post, index) => {\r\n                this.posts[index] = new Post(post, this);\r\n            });\r\n        }\r\n        createPost(parentId: number, content: string): Post {\r\n            var newPost = new Post({\r\n                content: content,\r\n                id: this.getNextId(),\r\n                parentId: parentId || 0,\r\n                created: new Date(),\r\n                user: user\r\n            }, this);\r\n\r\n            this.posts.push(newPost);\r\n            return newPost;\r\n        }\r\n        getNextId(): number {\r\n            var highestId = 0;\r\n            if (this.posts.length > 0) {\r\n                var lastPost = _.max(this.posts, (post) => post.id);\r\n                highestId = lastPost.id;\r\n            }\r\n            return highestId + 1;\r\n        }\r\n        prune(): void {\r\n            /** Remove any blank posts prior to saving */\r\n            _.each(this.posts, (post) => {\r\n                if (_.isEmpty(post.content)) {\r\n                    post.removePost();\r\n                }\r\n            });\r\n        }\r\n        reset(): void {\r\n            this.posts.length = 0;\r\n        }\r\n        saveChanges(): ng.IPromise<ap.IListItem<any>> {\r\n            this.prune();\r\n            var listItem = this.getListItem();\r\n            return listItem.saveFields([this.getDiscussionAttributeName()]);\r\n        }\r\n    }\r\n\r\n\r\n}","/// <reference path=\"../typings/ap.d.ts\" />\r\n/// <reference path=\"apDiscussionThreadFactory.ts\" />\r\n/// <reference path=\"DiscussionThread.ts\" />\r\n\r\n\r\nmodule ap.discussionThread {\r\n    'use strict';\r\n\r\n    interface IControllerScope extends ng.IScope {\r\n        changeEvent?(action: string, content?: string): void;\r\n        fieldName?: string;\r\n        listItem: ap.IListItem<any>;\r\n    }\r\n\r\n    export class DiscussionThreadController {\r\n        changeEvent(action: string, content?: string);\r\n\r\n        discussionObject: DiscussionThread;\r\n        fieldName: string;\r\n        listItem: Object;\r\n        negotiatingWithServer: boolean = false;\r\n        posts: Post[];\r\n        respondingTo = '';\r\n        tempPost = '';\r\n        tempResponse = '';\r\n\r\n        constructor($scope: IControllerScope, apDiscussionThreadFactory: DiscussionThreadFactory) {\r\n            var vm = this;\r\n            vm.changeEvent = $scope.changeEvent;\r\n            vm.fieldName = $scope.fieldName || 'discussionThread';\r\n            vm.listItem = $scope.listItem;\r\n            \r\n            \r\n\r\n            $scope.$watch('listItem', (newVal, oldVal) => {\r\n                if (newVal) {\r\n                    /** Use discussion thread factory to ensure we have a valid discussion object */\r\n                    // this.discussionObject = apDiscussionThreadFactory\r\n                    //     .createDiscussionObject(vm.listItem, vm.fieldName);\r\n                    vm.discussionObject = vm.listItem[vm.fieldName];\r\n                    vm.posts = this.discussionObject.posts;\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        clearTempVars() {\r\n            this.respondingTo = '';\r\n            this.tempPost = '';\r\n            this.tempResponse = '';\r\n        }\r\n\r\n        cleanup(event: string, content?: string) {\r\n            this.clearTempVars();\r\n            this.negotiatingWithServer = false;\r\n            toastr.success('Discussion thread successfully updated.');\r\n            if (_.isFunction(this.changeEvent) && event) {\r\n                this.changeEvent(event, content);\r\n            }\r\n        }\r\n\r\n        createPost(content: string, post: Post) {\r\n            if (content.length < 1) {\r\n                toastr.warning('You need to add a comment before saving.');\r\n            } else {\r\n                this.negotiatingWithServer = true;\r\n                if (post) {\r\n                    post.reply(content)\r\n                        .then(() => this.cleanup('reply', content));\r\n                } else {\r\n                    /** Creating new top level post */\r\n                    this.discussionObject.createPost(null, content).savePost()\r\n                        .then(() => this.cleanup('create', content));\r\n                }\r\n            }\r\n        }\r\n\r\n        deletePost(post: Post) {\r\n            var hasChildren = false;\r\n            _.each(this.discussionObject.posts, (p) => {\r\n                if (p.parentId === post.id) {\r\n                    hasChildren = true;\r\n                    return;\r\n                }\r\n            });\r\n            if (hasChildren) {\r\n                toastr.warning('Unable to delete a comment with child responses.  Please ' +\r\n                    'remove all children first.');\r\n                return;\r\n            }\r\n            var confirmation = window.confirm('Are you sure you want to delete this comment?');\r\n            if (confirmation) {\r\n                this.negotiatingWithServer = true;\r\n                post.deletePost()\r\n                    .then(() => this.cleanup('delete'));\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","/// <reference path=\"apDiscussionThreadFactory.ts\" />\r\n/// <reference path=\"apDiscussionThreadDirectiveController.ts\" />\r\n\r\nmodule ap.discussionThread {\r\n    'use strict';\r\n\r\n    function APDiscussionThreadDirective() {\r\n        var directive = {\r\n            controller: DiscussionThreadController,\r\n            controllerAs: 'vm',\r\n            scope: {\r\n                changeEvent: '=?', //Callback executed if available that passes back action[create, reply, or delete] and body of post\r\n                fieldName: '=?', //Defaults to 'discussionThread'\r\n                listItem: '='\r\n            },\r\n            templateUrl: 'ap-discussion-thread.html'\r\n        };\r\n        return directive;\r\n    }\r\n\r\n\r\n\r\n    angular\r\n        .module('angularPoint')\r\n        .directive('apDiscussionThread', APDiscussionThreadDirective);\r\n\r\n}\r\n"],"sourceRoot":"/source/"}