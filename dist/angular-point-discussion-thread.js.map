{"version":3,"sources":["DiscussionThread.ts","Post.ts","apDiscussionThreadDirective.ts","apDiscussionThreadDirectiveController.ts","apDiscussionThreadFactory.ts","index.ts"],"names":["ap","ap.discussionThread","ap.discussionThread.DiscussionThread","ap.discussionThread.DiscussionThread.constructor","ap.discussionThread.DiscussionThread.createPost","ap.discussionThread.DiscussionThread.getNextId","ap.discussionThread.DiscussionThread.prune","ap.discussionThread.DiscussionThread.reset","ap.discussionThread.DiscussionThread.saveChanges","ap.discussionThread.Post","ap.discussionThread.Post.constructor","ap.discussionThread.Post.deletePost","ap.discussionThread.Post.removePost","ap.discussionThread.Post.reply","ap.discussionThread.Post.savePost","ap.discussionThread.DiscussionThreadController","ap.discussionThread.DiscussionThreadController.constructor","ap.discussionThread.DiscussionThreadController.clearTempVars","ap.discussionThread.DiscussionThreadController.cleanup","ap.discussionThread.DiscussionThreadController.createPost","ap.discussionThread.DiscussionThreadController.deletePost","ap.discussionThread.DiscussionThreadFactory","ap.discussionThread.DiscussionThreadFactory.constructor","ap.discussionThread.DiscussionThreadFactory.createDiscussionObject"],"mappings":"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","file":"angular-point-discussion-thread.js","sourcesContent":["/// <reference path=\"../typings/ap.d.ts\" />\n/// <reference path=\"../typings/tsd.d.ts\" />\n\nmodule ap.discussionThread {\n    'use strict';\n\n    export interface IDiscussionThread {\n        createPost(parentId: number, content: string): Post;\n        getDiscussionAttributeName(): string;\n        getListItem(): ap.ListItem<any>;\n        getNextId(): number;\n        posts: Post[];\n        prune(): void;\n        reset(): void;\n        saveChanges(): ng.IPromise<ap.ListItem<any>>;\n    }\n\t\n\t/**\n\t * @ngdoc function\n\t * @name createDiscussionObject\n\t * @param {object} listItem List item with discussion.\n\t * @param {string} [discussionAttributeName='discussionThread'] Name of attribute on list item.\n\t * @returns {object} Newly instantiated discussion object.\n\t */\n    export class DiscussionThread implements IDiscussionThread {\n        getDiscussionAttributeName: () => string;\n        getListItem: () => ap.ListItem<any>;\n        posts: Post[] = [];\n        constructor(listItem: ap.ListItem<any>, discussionAttributeName = 'discussionThread') {\n            \n            /** Protect these two paramaters to prevent saving to SharePoint */\n            this.getListItem = () => listItem;\n            this.getDiscussionAttributeName = () => discussionAttributeName;\n\n            _.assign(this, listItem[discussionAttributeName]);\n\n            _.each(this.posts, (post, index) => {\n                this.posts[index] = new Post(post);\n            });\n        }\n        createPost(parentId: number, content: string): Post {\n            var newPost = new Post({\n                content: content,\n                id: this.getNextId(),\n                parentId: parentId || 0,\n                created: new Date(),\n                user: user\n            });\n\n            this.posts.push(newPost);\n            return newPost;\n        }\n        getNextId(): number {\n            var highestId = 0;\n            if (this.posts.length > 0) {\n                var lastPost = _.max(this.posts, (post) => post.id);\n                highestId = lastPost.id;\n            }\n            return highestId + 1;\n        }\n        prune(): void {\n            /** Remove any blank posts prior to saving */\n            _.each(this.posts, (post) => {\n                if (_.isEmpty(post.content)) {\n                    post.removePost();\n                }\n            });\n        }\n        reset(): void {\n            this.posts.length = 0;\n        }\n        saveChanges(): ng.IPromise<ap.ListItem<any>> {\n            this.prune();\n            var listItem = this.getListItem();\n            return listItem.saveFields([this.getDiscussionAttributeName()]);\n        }\n    }\n\n\n}","/// <reference path=\"../typings/ap.d.ts\" />\n/// <reference path=\"../typings/tsd.d.ts\" />\n\nmodule ap.discussionThread {\n    'use strict';\n\n    export class Post {\n        created: Date;\n        content: string;\n        id: number;\n        parentId: number;\n        user: ap.IUser;\n\n        constructor(post) {\n            _.assign(this, post);\n            if (_.isString(this.created)) {\n                /** Convert stringified date back into JS date */\n                this.created = moment(this.created).toDate();\n            }\n        }\n\n        deletePost(discussionThread: DiscussionThread) {\n            this.removePost(discussionThread);\n            return this.savePost(discussionThread);\n        }\n\n        removePost(discussionThread: DiscussionThread): void {\n            var index = discussionThread.posts.indexOf(this);\n            discussionThread.posts.splice(index, 1);\n        }\n\n        reply(response: string, discussionThread: DiscussionThread) {\n            discussionThread.createPost(this.id, response);\n            return this.savePost(discussionThread);\n        }\n\n        savePost(discussionThread: DiscussionThread) {\n            return discussionThread.saveChanges();\n        }\n    }\n}\n","/// <reference path=\"../typings/ap.d.ts\" />\n/// <reference path=\"../typings/tsd.d.ts\" />\n\nmodule ap.discussionThread {\n    'use strict';\n    \n    export var APDiscussionThreadDirective = () => {\n        var directive = {\n            controller: DiscussionThreadController,\n            controllerAs: 'vm',\n            scope: {\n                changeEvent: '=?', //Callback executed if available that passes back action[create, reply, or delete] and body of post\n                fieldName: '=?', //Defaults to 'discussionThread'\n                listItem: '='\n            },\n            templateUrl: 'ap-discussion-thread.html'\n        };\n        return directive;\n    }\n\n}\n","/// <reference path=\"../typings/ap.d.ts\" />\n/// <reference path=\"../typings/tsd.d.ts\" />\n\nmodule ap.discussionThread {\n    'use strict';\n\n    interface IControllerScope extends ng.IScope {\n        changeEvent?(action: string, content?: string): void;\n        fieldName?: string;\n        listItem: ap.ListItem<any>;\n    }\n\n    export class DiscussionThreadController {\n        changeEvent: (action: string, content?: string) => void;\n        discussionThread: DiscussionThread;\n        fieldName: string;\n        listItem: Object;\n        negotiatingWithServer: boolean = false;\n        respondingTo = '';\n        tempPost = '';\n        tempResponse = '';\n\n        constructor($scope: IControllerScope, apDiscussionThreadFactory: DiscussionThreadFactory) {\n            var vm = this;\n            vm.changeEvent = $scope.changeEvent;\n            vm.fieldName = $scope.fieldName || 'discussionThread';\n            vm.listItem = $scope.listItem;\n\n            $scope.$watch('listItem.' + vm.fieldName, (newVal, oldVal) => {\n                if (newVal) {\n                    vm.discussionThread = newVal;\n                }\n\n                console.assert(newVal.posts === vm.listItem[vm.fieldName].posts);\n            });\n\n        }\n\n        clearTempVars() {\n            this.respondingTo = '';\n            this.tempPost = '';\n            this.tempResponse = '';\n        }\n\n        cleanup(event: string, content?: string) {\n            this.clearTempVars();\n            this.negotiatingWithServer = false;\n            toastr.success('Discussion thread successfully updated.');\n            if (_.isFunction(this.changeEvent) && event) {\n                this.changeEvent(event, content);\n            }\n        }\n\n        createPost(content: string, post: Post) {\n            if (content.length < 1) {\n                toastr.warning('You need to add a comment before saving.');\n            } else {\n                this.negotiatingWithServer = true;\n                if (post) {\n                    post.reply(content, this.discussionThread)\n                        .then(() => this.cleanup('reply', content));\n                } else {\n                    /** Creating new top level post */\n                    this.discussionThread.createPost(null, content)\n                        .savePost(this.discussionThread)\n                        .then(() => this.cleanup('create', content));\n                }\n            }\n        }\n\n        deletePost(post: Post) {\n            var hasChildren = false;\n            _.each(this.discussionThread.posts, (p) => {\n                if (p.parentId === post.id) {\n                    hasChildren = true;\n                    return;\n                }\n            });\n            if (hasChildren) {\n                toastr.warning('Unable to delete a comment with child responses.  Please ' +\n                    'remove all children first.');\n                return;\n            }\n            var confirmation = window.confirm('Are you sure you want to delete this comment?');\n            if (confirmation) {\n                this.negotiatingWithServer = true;\n                post.deletePost(this.discussionThread)\n                    .then(() => this.cleanup('delete'));\n            }\n        }\n\n    }\n}\n","/// <reference path=\"../typings/ap.d.ts\" />\n/// <reference path=\"../typings/tsd.d.ts\" />\n\nmodule ap.discussionThread {\n    'use strict';\n\n    /** Share within module */\n    export var moment;\n    export var toastr;\n    export var user;\n\n    /**\n     * @ngdoc service\n     * @name apDiscussionThreadFactory\n     * @description\n     */\n    export class DiscussionThreadFactory {\n        static $inject = ['moment', 'toastr', 'user'];\n        constructor(_moment_, _toastr_, _user_) {\n            moment = _moment_;\n            toastr = _toastr_;\n            user = _user_;\n        }\n\n        /**\n         * @ngdoc function\n         * @name createDiscussionObject\n         * @param {object} listItem List item with discussion.\n         * @param {string} discussionAttributeName Name of attribute on list item.\n         * @returns {object} Newly instantiated discussion object.\n         */\n        createDiscussionObject<T>(listItem: ap.ListItem<T>, discussionAttributeName = 'discussionThread'): DiscussionThread {\n            var discussionThread;\n\n            // if (listItem[discussionAttributeName] && listItem[discussionAttributeName].constructor.name === 'DiscussionThread') {\n            //     /** Discussion thread is already instantiated */\n            //     discussionThread = listItem[discussionAttributeName];\n            // } else {\n                /** Instantiate and return new discussion thread */\n                discussionThread = new DiscussionThread(listItem, discussionAttributeName);\n            // }\n\n            return discussionThread;\n        }\n\n    }\n\n}\n","/// <reference path=\"../typings/ap.d.ts\" />\n/// <reference path=\"../typings/tsd.d.ts\" />\n\nmodule ap.discussionThread {\n    'use strict';\n\n    angular\n        .module('angularPoint')\n        .service('apDiscussionThreadFactory', DiscussionThreadFactory)\n        .directive('apDiscussionThread', APDiscussionThreadDirective);\n}"],"sourceRoot":"/source/"}